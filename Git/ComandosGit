Comandos Basicos do git

para iniciar um repositorio controlado pelo git > git init

para adicionar os arquivos ao repositório > git add -A 

para "comitar" os arquivos > git commit -m "(mensagem melhores praticas em ingles)"

para enviar os arquivos para o github > git push origin master (ou outra branch)

para enviar de qualquer forma ignorando erros e conflitos > git push -f origin (nome da branch) 

para puxar "atualizar" os arquivos locais com os do repo > git pull origin

para puxar "atualizar" uma release > git fetch origin  (nome da branch) 

para "apontar para um repositório remoto no github" > git add remote origin (url do repositório )

para visualizar para qual repositorio está sendo apontado > git remote -v

para criar uma branch > git checkout -b (nome da branch)
#OBS branch é uma ramificação da master , espelhamento para desenvolver sem alterar algo na master 

para deletar uma branch > git branch -D (nome da branch)

para alterar a branch utilizada > git checkout (nome da branch) 

para saber qual branch esta sendo utilizada atualmente > git branch

para realizar merge > git merge (nome da branch) 

para criar uma tag > git tag -a v1.4 -m 'my version 1.4'
(Criando uma tag anotada em Git é simples. O jeito mais fácil é especificar -a quando você executar o comando /
O parâmetro -m define uma mensagem, que é armazenada com a tag. Se você não especificar uma mensagem para uma tag anotada, o Git vai rodar seu editor de texto para você digitar alguma coisa)


----------------------Git-Flow----------------------

para iniciar git flow no diretorio > git flow init
atribuir os nomes das features,releases,bugfix,hotfix...

para criar uma feature > git flow feature start (nome da feature)

para finalizar a feature e realizar o merge para develop > git flow feature finish (nome da branch)

para criar uma release > git flow release start (nome da release)

para finalizar a release e realizar o merge para develop/master > git flow release finish (nome da release)

 
